# 어떤 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고한다
# 단 두번째 연산은 N이 K로 나누어떨어질 때만 선택할 수 있다.
# 1. N에서 1을 뺀다.
# 2. N을 K로 나눈다.

# 입력조건
# 첫째 줄에 N(2<=N<=100000), K(2<=K<=100000)가 공백으로 구분되며 각각 자연수로 주어진다.
# 이때 입력으로 주어지는 N은 항상 K보다 크거나 같다.

# 출력조건
# 첫째 줄에 N이 1이 될때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다.

# N과K를 입력받자

n, k = map(int, input().split())
i=0
if (2<=n<=100000)&(2<=k<=100000):
    while n<=k:
        # n=1이면 break
        if n == 1:
            # print('n1',n)
            break
        # n을 k로 나누었을때 나머지가 0이면 n/k를 n에 덮어씌우기(2번)
        elif n%k == 0:
            i += 1
            n = n/k
            # print('n2',n)
        # n을 k로 나눌수 없는 경우 -1 연산(1번)
        else :
            i += 1
            n = n-1
            # print('n3',n)
print('최소 실행 횟수: ',i)
